package com.project.gimme.gen;

import com.project.gimme.pojo.Channel;
import com.project.gimme.pojo.ChannelNotice;
import com.project.gimme.pojo.ChannelUser;
import com.project.gimme.pojo.ChatFile;
import com.project.gimme.pojo.ChatMsg;
import com.project.gimme.pojo.CheckIn;
import com.project.gimme.pojo.CheckInUser;
import com.project.gimme.pojo.Group;
import com.project.gimme.pojo.GroupNotice;
import com.project.gimme.pojo.GroupUser;
import com.project.gimme.pojo.MsgBot;
import com.project.gimme.pojo.PersonalMsg;
import com.project.gimme.pojo.ToDoList;
import com.project.gimme.pojo.ToDoUser;
import com.project.gimme.pojo.User;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig channelDaoConfig;
    private final DaoConfig channelNoticeDaoConfig;
    private final DaoConfig channelUserDaoConfig;
    private final DaoConfig chatFileDaoConfig;
    private final DaoConfig chatMsgDaoConfig;
    private final DaoConfig checkInDaoConfig;
    private final DaoConfig checkInUserDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig groupNoticeDaoConfig;
    private final DaoConfig groupUserDaoConfig;
    private final DaoConfig msgBotDaoConfig;
    private final DaoConfig personalMsgDaoConfig;
    private final DaoConfig toDoListDaoConfig;
    private final DaoConfig toDoUserDaoConfig;
    private final DaoConfig userDaoConfig;

    private final ChannelDao channelDao;
    private final ChannelNoticeDao channelNoticeDao;
    private final ChannelUserDao channelUserDao;
    private final ChatFileDao chatFileDao;
    private final ChatMsgDao chatMsgDao;
    private final CheckInDao checkInDao;
    private final CheckInUserDao checkInUserDao;
    private final GroupDao groupDao;
    private final GroupNoticeDao groupNoticeDao;
    private final GroupUserDao groupUserDao;
    private final MsgBotDao msgBotDao;
    private final PersonalMsgDao personalMsgDao;
    private final ToDoListDao toDoListDao;
    private final ToDoUserDao toDoUserDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        channelDaoConfig = daoConfigMap.get(ChannelDao.class).clone();
        channelDaoConfig.initIdentityScope(type);

        channelNoticeDaoConfig = daoConfigMap.get(ChannelNoticeDao.class).clone();
        channelNoticeDaoConfig.initIdentityScope(type);

        channelUserDaoConfig = daoConfigMap.get(ChannelUserDao.class).clone();
        channelUserDaoConfig.initIdentityScope(type);

        chatFileDaoConfig = daoConfigMap.get(ChatFileDao.class).clone();
        chatFileDaoConfig.initIdentityScope(type);

        chatMsgDaoConfig = daoConfigMap.get(ChatMsgDao.class).clone();
        chatMsgDaoConfig.initIdentityScope(type);

        checkInDaoConfig = daoConfigMap.get(CheckInDao.class).clone();
        checkInDaoConfig.initIdentityScope(type);

        checkInUserDaoConfig = daoConfigMap.get(CheckInUserDao.class).clone();
        checkInUserDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        groupNoticeDaoConfig = daoConfigMap.get(GroupNoticeDao.class).clone();
        groupNoticeDaoConfig.initIdentityScope(type);

        groupUserDaoConfig = daoConfigMap.get(GroupUserDao.class).clone();
        groupUserDaoConfig.initIdentityScope(type);

        msgBotDaoConfig = daoConfigMap.get(MsgBotDao.class).clone();
        msgBotDaoConfig.initIdentityScope(type);

        personalMsgDaoConfig = daoConfigMap.get(PersonalMsgDao.class).clone();
        personalMsgDaoConfig.initIdentityScope(type);

        toDoListDaoConfig = daoConfigMap.get(ToDoListDao.class).clone();
        toDoListDaoConfig.initIdentityScope(type);

        toDoUserDaoConfig = daoConfigMap.get(ToDoUserDao.class).clone();
        toDoUserDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        channelDao = new ChannelDao(channelDaoConfig, this);
        channelNoticeDao = new ChannelNoticeDao(channelNoticeDaoConfig, this);
        channelUserDao = new ChannelUserDao(channelUserDaoConfig, this);
        chatFileDao = new ChatFileDao(chatFileDaoConfig, this);
        chatMsgDao = new ChatMsgDao(chatMsgDaoConfig, this);
        checkInDao = new CheckInDao(checkInDaoConfig, this);
        checkInUserDao = new CheckInUserDao(checkInUserDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        groupNoticeDao = new GroupNoticeDao(groupNoticeDaoConfig, this);
        groupUserDao = new GroupUserDao(groupUserDaoConfig, this);
        msgBotDao = new MsgBotDao(msgBotDaoConfig, this);
        personalMsgDao = new PersonalMsgDao(personalMsgDaoConfig, this);
        toDoListDao = new ToDoListDao(toDoListDaoConfig, this);
        toDoUserDao = new ToDoUserDao(toDoUserDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Channel.class, channelDao);
        registerDao(ChannelNotice.class, channelNoticeDao);
        registerDao(ChannelUser.class, channelUserDao);
        registerDao(ChatFile.class, chatFileDao);
        registerDao(ChatMsg.class, chatMsgDao);
        registerDao(CheckIn.class, checkInDao);
        registerDao(CheckInUser.class, checkInUserDao);
        registerDao(Group.class, groupDao);
        registerDao(GroupNotice.class, groupNoticeDao);
        registerDao(GroupUser.class, groupUserDao);
        registerDao(MsgBot.class, msgBotDao);
        registerDao(PersonalMsg.class, personalMsgDao);
        registerDao(ToDoList.class, toDoListDao);
        registerDao(ToDoUser.class, toDoUserDao);
        registerDao(User.class, userDao);
    }

    public void clear() {
        channelDaoConfig.clearIdentityScope();
        channelNoticeDaoConfig.clearIdentityScope();
        channelUserDaoConfig.clearIdentityScope();
        chatFileDaoConfig.clearIdentityScope();
        chatMsgDaoConfig.clearIdentityScope();
        checkInDaoConfig.clearIdentityScope();
        checkInUserDaoConfig.clearIdentityScope();
        groupDaoConfig.clearIdentityScope();
        groupNoticeDaoConfig.clearIdentityScope();
        groupUserDaoConfig.clearIdentityScope();
        msgBotDaoConfig.clearIdentityScope();
        personalMsgDaoConfig.clearIdentityScope();
        toDoListDaoConfig.clearIdentityScope();
        toDoUserDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public ChannelDao getChannelDao() {
        return channelDao;
    }

    public ChannelNoticeDao getChannelNoticeDao() {
        return channelNoticeDao;
    }

    public ChannelUserDao getChannelUserDao() {
        return channelUserDao;
    }

    public ChatFileDao getChatFileDao() {
        return chatFileDao;
    }

    public ChatMsgDao getChatMsgDao() {
        return chatMsgDao;
    }

    public CheckInDao getCheckInDao() {
        return checkInDao;
    }

    public CheckInUserDao getCheckInUserDao() {
        return checkInUserDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public GroupNoticeDao getGroupNoticeDao() {
        return groupNoticeDao;
    }

    public GroupUserDao getGroupUserDao() {
        return groupUserDao;
    }

    public MsgBotDao getMsgBotDao() {
        return msgBotDao;
    }

    public PersonalMsgDao getPersonalMsgDao() {
        return personalMsgDao;
    }

    public ToDoListDao getToDoListDao() {
        return toDoListDao;
    }

    public ToDoUserDao getToDoUserDao() {
        return toDoUserDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
